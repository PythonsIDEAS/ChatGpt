{"ast":null,"code":"var _jsxFileName = \"/Users/tarhanutegenov/site/My_chatgpt_app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hello! How can I assist you? ðŸ˜Š\",\n    sender: \"bot\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const chatBoxRef = useRef(null);\n  useEffect(() => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  }, [messages.length]); // Only re-run when the number of messages changes\n\n  const sendMessage = async () => {\n    if (!input.trim() || isLoading) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"http://192.168.7.34:5000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch response from server\");\n      }\n      const data = await response.json();\n      if (data.response) {\n        const botReply = {\n          text: data.response,\n          sender: \"bot\"\n        };\n        setMessages(prevMessages => [...prevMessages, botReply]);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages(prevMessages => [...prevMessages, {\n        text: \"Sorry, I couldn't process your request. ðŸ˜ž\",\n        sender: \"bot\"\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n    setInput(\"\");\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      ref: chatBoxRef,\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot\",\n        children: \"Typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleKeyDown // Updated from onKeyPress to onKeyDown\n        ,\n        placeholder: \"Type a message...\",\n        \"aria-label\": \"Chat input\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: isLoading,\n        \"aria-label\": \"Send message\",\n        children: isLoading ? \"Sending...\" : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gQ+DzpyMRraj2BELRTTO4ERIlcU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","messages","setMessages","text","sender","input","setInput","isLoading","setIsLoading","chatBoxRef","current","scrollTop","scrollHeight","length","sendMessage","trim","userMessage","prevMessages","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","data","json","botReply","error","console","handleKeyDown","e","key","className","children","ref","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onKeyDown","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/tarhanutegenov/site/My_chatgpt_app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [messages, setMessages] = useState([\n    { text: \"Hello! How can I assist you? ðŸ˜Š\", sender: \"bot\" },\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const chatBoxRef = useRef(null);\n\n  useEffect(() => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  }, [messages.length]); // Only re-run when the number of messages changes\n\n  const sendMessage = async () => {\n    if (!input.trim() || isLoading) return;\n\n    const userMessage = { text: input, sender: \"user\" };\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(\"http://192.168.7.34:5000/chat\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ message: input }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch response from server\");\n      }\n\n      const data = await response.json();\n      if (data.response) {\n        const botReply = { text: data.response, sender: \"bot\" };\n        setMessages((prevMessages) => [...prevMessages, botReply]);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { text: \"Sorry, I couldn't process your request. ðŸ˜ž\", sender: \"bot\" },\n      ]);\n    } finally {\n      setIsLoading(false);\n    }\n\n    setInput(\"\");\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-box\" ref={chatBoxRef}>\n        {messages.map((msg, index) => (\n          <div key={index} className={`message ${msg.sender}`}>\n            {msg.text}\n          </div>\n        ))}\n        {isLoading && <div className=\"message bot\">Typing...</div>}\n      </div>\n\n      <div className=\"input-box\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={handleKeyDown} // Updated from onKeyPress to onKeyDown\n          placeholder=\"Type a message...\"\n          aria-label=\"Chat input\"\n          disabled={isLoading}\n        />\n        <button onClick={sendMessage} disabled={isLoading} aria-label=\"Send message\">\n          {isLoading ? \"Sending...\" : \"Send\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}