{"ast":null,"code":"var _jsxFileName = \"/Users/tarhanutegenov/site/My_chatgpt_app/frontend/src/SplitText.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SplitText = ({\n  text,\n  delay = 50\n}) => {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  useEffect(() => {\n    const chars = text.split(\"\");\n    let currentIndex = 0;\n    const interval = setInterval(() => {\n      if (currentIndex < chars.length) {\n        setCharacters(prev => [...prev, chars[currentIndex]]);\n        currentIndex++;\n      } else {\n        clearInterval(interval);\n      }\n    }, delay);\n    return () => clearInterval(interval);\n  }, [text, delay]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: characters.map((char, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        opacity: 0,\n        animation: `fadeIn 0.3s ${index * 0.1}s forwards`\n      },\n      children: char\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(SplitText, \"Lpb9AbqKJ07+xuj4aZ1twNw87e0=\");\n_c = SplitText;\nvar _c;\n$RefreshReg$(_c, \"SplitText\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SplitText","text","delay","_s","characters","setCharacters","chars","split","currentIndex","interval","setInterval","length","prev","clearInterval","children","map","char","index","style","opacity","animation","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tarhanutegenov/site/My_chatgpt_app/frontend/src/SplitText.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport const SplitText = ({ text, delay = 50 }) => {\n  const [characters, setCharacters] = useState([]);\n\n  useEffect(() => {\n    const chars = text.split(\"\");\n    let currentIndex = 0;\n    const interval = setInterval(() => {\n      if (currentIndex < chars.length) {\n        setCharacters((prev) => [...prev, chars[currentIndex]]);\n        currentIndex++;\n      } else {\n        clearInterval(interval);\n      }\n    }, delay);\n\n    return () => clearInterval(interval);\n  }, [text, delay]);\n\n  return (\n    <span>\n      {characters.map((char, index) => (\n        <span key={index} style={{ opacity: 0, animation: `fadeIn 0.3s ${index * 0.1}s forwards` }}>\n          {char}\n        </span>\n      ))}\n    </span>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGL,IAAI,CAACM,KAAK,CAAC,EAAE,CAAC;IAC5B,IAAIC,YAAY,GAAG,CAAC;IACpB,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIF,YAAY,GAAGF,KAAK,CAACK,MAAM,EAAE;QAC/BN,aAAa,CAAEO,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEN,KAAK,CAACE,YAAY,CAAC,CAAC,CAAC;QACvDA,YAAY,EAAE;MAChB,CAAC,MAAM;QACLK,aAAa,CAACJ,QAAQ,CAAC;MACzB;IACF,CAAC,EAAEP,KAAK,CAAC;IAET,OAAO,MAAMW,aAAa,CAACJ,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACR,IAAI,EAAEC,KAAK,CAAC,CAAC;EAEjB,oBACEH,OAAA;IAAAe,QAAA,EACGV,UAAU,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1BlB,OAAA;MAAkBmB,KAAK,EAAE;QAAEC,OAAO,EAAE,CAAC;QAAEC,SAAS,EAAE,eAAeH,KAAK,GAAG,GAAG;MAAa,CAAE;MAAAH,QAAA,EACxFE;IAAI,GADIC,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAACrB,EAAA,CA3BWH,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}